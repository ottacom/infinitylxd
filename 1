#!/usr/bin/python
import flask
from flask import Flask, request ,json
from flask_restful import Resource, Api
from lib import loadconfig
from ldap3 import Server, Connection, ALL

app = Flask(__name__)
api = Api(app)
todos = {}
data = {}

#Load configuration settings
loadconfig.load_configuration()



#Native functions
def domain_security_check (domain):
	if str(loadconfig.trusted_domains) == 'ALL':
		return True
	else:
		if str(domain) in str(loadconfig.trusted_domains):
			return True
		else:
			return False

def ldap_add(s_record):
	try:
                server = Server(loadconfig.ldap_server(), get_info=ALL)
                conn = Connection(server , loadconfig.ldap_username(), loadconfig.ldap_password(), auto_bind=True)
		conn.add(s_record)
		print str(conn.result)
        except Exception, error:
                 print error





def ldap_search(s_objectclass,s_pattern,s_attribute,s_pagedsize):
        try:
                server = Server(loadconfig.ldap_server(), get_info=ALL)
                conn = Connection(server , loadconfig.ldap_username(), loadconfig.ldap_password(), auto_bind=True)
		conn.search(search_base = loadconfig.ldap_search(),
                                 search_filter = '(&(objectclass='+s_objectclass+')('+s_pattern+'))',
                                 attributes = [ s_attribute[0],s_attribute[1] ],
                                 paged_size = s_pagedsize)
		conn.response=str(conn.response)
		if conn.response == "[]":
			return "404"
		else:
			#return json.dumps(str(conn.response).replace("'","\""))
                        #conn.response = str(conn.response)[2:-1]
                        conn.response=conn.response.replace("u'","'")
                        conn.response=conn.response.replace("'","\"")
                        return json.loads(conn.response)

        except Exception, error:
                 print error

def check_request_type (headers):
	if headers == 'text/plain':
                 #return "Text Message: " + request.data
                 return "T" 

        elif headers == 'application/json':
                 #return "JSON Message: " + json.dumps(request.json)
                 return "J"

        elif headers == 'application/octet-stream':
                 #f = open('./binary', 'wb')
                 #f.write(request.data)
                 #f.close()
                 return "B"

        else:
                 #return "415 Unsupported Media Type ;)"
                 return "415"








@app.route('/signup', methods = ['POST'])
def api_signup():
	if (check_request_type(request.headers['Content-Type']) == "J"):

		jmail=json.loads(json.dumps(request.json))['email']
                jdomain=jmail.split('@')[-1]
		jo=jdomain.split('.')[0]
		print juid,loadconfig.ldap_gid_name(),jo,loadconfig.ldap_gid_name()
		if domain_security_check(jdomain) == True:

			response=ldap_search('inetOrgPerson','mail='+jmail,['mail','mail'],1)

			if response == "404":
				print ('cn='+jmail+",ou="+loadconfig.ldap_gid_name()+",o="+jo+", attributes={'objectClass' :['inetOrgPerson','posixGroup', 'top'],{'gidNumber':"+loadconfig.ldap_gid_name()+"})")	


				ldap_add('cn='+juid+",ou="+loadconfig.ldap_gid_name()+",o="+jo+",['inetOrgPerson','posixGroup', 'top'],{'gidNumber':"+loadconfig.ldap_gid_name()+"})")
				print "Registering ...."
				return json.dumps("201")

			else :
				 email_returned=json.dumps(response[0]["attributes"]["mail"])[2:-2]
				 if jmail == email_returned:
			 	 	return json.dumps("409")
		else :

	    		return json.dumps("403")

	else:
		return json.dumps("415")



